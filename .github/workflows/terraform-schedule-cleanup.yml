name: Auto Destroy Stale PR Workspaces

on:
  schedule:
    - cron: '0 * * * *'  # Ch·∫°y m·ªói 1 ti·∫øng
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read

env:
  TF_TOKEN_app_terraform_io: ${{ secrets.HCP_API }}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  destroy-old-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find PRs older than 2 hours
        id: find
        run: |
          echo "üì¶ Fetching PRs older than 2 hours..."
          old_prs=$(gh pr list --state open --json number,createdAt --jq '
            map(select((.createdAt | fromdateiso8601) < (now - 7200 | todate))) | map(.number)')
          
          echo "Found old PRs: $old_prs"
          echo "old_prs=$old_prs" >> $GITHUB_OUTPUT

      - name: Setup Terraform
        if: steps.find.outputs.old_prs != '[]'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.4.0

      - name: Destroy resources for old PRs
        if: steps.find.outputs.old_prs != '[]'
        working-directory: infra/terraform
        run: |
          echo "Old PRs to destroy: ${{ steps.find.outputs.old_prs }}"
          terraform init
          for pr in $(echo '${{ steps.find.outputs.old_prs }}' | jq -r '.[]'); do
            echo "üî¥ Destroying resources for PR #$pr..."
            export TF_WORKSPACE=dev$pr
            if terraform destroy -auto-approve -var="resource_prefix=dev$pr"; then
              echo "‚úÖ Cleaned up PR #$pr"
              # Optional: Delete workspace via API
              curl -s -X DELETE \
                "https://app.terraform.io/api/v2/organizations/andrewdq/workspaces/cloudops-practice-dev$pr" \
                -H "Authorization: Bearer $TF_TOKEN_app_terraform_io" || echo "Workspace deletion failed"
            else
              echo "‚ùå Failed to destroy PR #$pr"
            fi
            done

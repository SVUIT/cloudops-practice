name: Terraform CI/CD

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'

permissions: 
  contents: read
  pull-requests: write

env:
  TF_TOKEN_app_terraform_io: ${{ secrets.HCP_API }}
  TF_WORKING_DIR: infra/terraform
  AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
  AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
  AZURE_STORAGE_CONTAINER: ${{ secrets.AZURE_STORAGE_CONTAINER }}

jobs:
  terraform-plan:
    name: Terraform Validate & Plan
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    concurrency: 
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with: 
          terraform_version: 1.4.0

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      - name: Terraform Validate
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform validate -no-color

      - name: Terraform Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform plan -out=tfplan.binary
          terraform show -no-color tfplan.binary > tfplan.txt

      - name: Upload tfplan to Azure Blob Storage
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          az storage blob upload \
            --account-name $AZURE_STORAGE_ACCOUNT \
            --account-key $AZURE_STORAGE_KEY \
            --container-name $AZURE_STORAGE_CONTAINER \
            --file tfplan.binary \
            --name tfplan-${{ github.sha }}.binary \
            --overwrite true

      - name: Comment Plan
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('infra/terraform/tfplan.txt', 'utf8');
            const output = `#### Terraform Plan ðŸ“–
            <details><summary>Show Plan</summary>

            \`\`\`hcl
            ${plan}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            const issue_number = context.issue.number;
            const repo = context.repo;

            const comments = await github.rest.issues.listComments({
              owner: repo.owner,
              repo: repo.repo,
              issue_number: issue_number,
            });

            const botComment = comments.data.find(comment =>
              comment.user.type === 'Bot' && comment.body.includes('Terraform Plan')
            );

            if (botComment) {
              await github.rest.issues.deleteComment({
                owner: repo.owner,
                repo: repo.repo,
                comment_id: botComment.id,
              });
            }

            await github.rest.issues.createComment({
              issue_number,
              owner: repo.owner,
              repo: repo.repo,
              body: output
            });

  terraform-apply:
    name: Terraform Apply
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with: 
          terraform_version: 1.4.0

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      - name: Download tfplan from Azure Blob Storage
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          az storage blob download \
            --account-name $AZURE_STORAGE_ACCOUNT \
            --account-key $AZURE_STORAGE_KEY \
            --container-name $AZURE_STORAGE_CONTAINER \
            --name tfplan-${{ github.sha }}.binary \
            --file tfplan.binary

      - name: Terraform Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply tfplan.binary

      - name: Delete tfplan after apply
        if: success()
        run: |
          az storage blob delete \
            --account-name $AZURE_STORAGE_ACCOUNT \
            --account-key $AZURE_STORAGE_KEY \
            --container-name $AZURE_STORAGE_CONTAINER \
            --name tfplan-${{ github.sha }}.binary \
            --auth-mode key
